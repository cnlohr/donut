Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              /tmp/ccv59PKM.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

audmark             0x2               /tmp/ccv59PKM.o
speed               0x1               /tmp/ccv59PKM.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
LOAD /tmp/ccv59PKM.o
LOAD /tmp/ccYgTAjM.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega168pb.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2180
 *(.vectors)
 .vectors       0x0000000000000000       0x6c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000006c                . = ALIGN (0x2)
                0x000000000000006c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000006c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000006c                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x000000000000006c     0x1f2d /tmp/ccYgTAjM.o
                0x000000000000006c                auddat
                0x0000000000001f9a                . = ALIGN (0x2)
 *fill*         0x0000000000001f99        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000001f9a                __ctors_start = .
 *(.ctors)
                0x0000000000001f9a                __ctors_end = .
                0x0000000000001f9a                __dtors_start = .
 *(.dtors)
                0x0000000000001f9a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000001f9a        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
                0x0000000000001f9a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000001f9a        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000001fa6       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000001fa6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000001fb6        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
 *(.init9)
 *(.text)
 .text          0x0000000000001fbe        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
                0x0000000000001fbe                __vector_22
                0x0000000000001fbe                __vector_1
                0x0000000000001fbe                __vector_24
                0x0000000000001fbe                __vector_12
                0x0000000000001fbe                __bad_interrupt
                0x0000000000001fbe                __vector_6
                0x0000000000001fbe                __vector_3
                0x0000000000001fbe                __vector_23
                0x0000000000001fbe                __vector_25
                0x0000000000001fbe                __vector_11
                0x0000000000001fbe                __vector_13
                0x0000000000001fbe                __vector_17
                0x0000000000001fbe                __vector_19
                0x0000000000001fbe                __vector_7
                0x0000000000001fbe                __vector_5
                0x0000000000001fbe                __vector_4
                0x0000000000001fbe                __vector_9
                0x0000000000001fbe                __vector_2
                0x0000000000001fbe                __vector_21
                0x0000000000001fbe                __vector_15
                0x0000000000001fbe                __vector_8
                0x0000000000001fbe                __vector_26
                0x0000000000001fbe                __vector_10
                0x0000000000001fbe                __vector_18
                0x0000000000001fbe                __vector_20
 .text          0x0000000000001fc2       0xfc /tmp/ccv59PKM.o
                0x0000000000001fc2                __vector_14
                0x0000000000001fcc                __vector_16
 .text          0x00000000000020be        0x0 /tmp/ccYgTAjM.o
 .text          0x00000000000020be        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x00000000000020be        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000020be                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000020be       0xbe /tmp/ccv59PKM.o
                0x00000000000020be                main
 .text.libgcc.mul
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000217c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000217c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x000000000000217c                exit
                0x000000000000217c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000217c        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000002180                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000002180
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
 .data          0x0000000000800100        0x0 /tmp/ccv59PKM.o
 .data          0x0000000000800100        0x0 /tmp/ccYgTAjM.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x4
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o
 .bss           0x0000000000800100        0x1 /tmp/ccv59PKM.o
 .bss           0x0000000000800101        0x0 /tmp/ccYgTAjM.o
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800101        0x3 /tmp/ccv59PKM.o
                0x0000000000800101                audmark
                0x0000000000800103                speed
                0x0000000000800104                PROVIDE (__bss_end, .)
                0x0000000000002180                __data_load_start = LOADADDR (.data)
                0x0000000000002180                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800104        0x0
                0x0000000000800104                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800104                PROVIDE (__noinit_end, .)
                0x0000000000800104                _end = .
                0x0000000000800104                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 /tmp/ccv59PKM.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 /tmp/ccYgTAjM.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168pb.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(program.elf elf32-avr)
LOAD linker stubs
